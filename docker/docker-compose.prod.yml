services:
  users_asp:
    container_name: users_asp
    image: aspnet
    build: 
      dockerfile: docker/dockerfiles/asp/Dockerfile
      context: ../
    restart: on-failure
    env_file: ../.env
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTP_PORTS: 8080
    expose:
      - 8080
    depends_on:
      postgres_users:
        condition: service_healthy
  
  postgres_users:
    container_name: postgres_users
    image: postgres:17rc1-alpine
    restart: on-failure
    env_file: ../.env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    expose:
      - 5432
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 20s
      retries: 3
    
